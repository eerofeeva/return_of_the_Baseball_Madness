[postgresql]
host = localhost
database = beer_baseball
user = postgres
password = admin1
port = 5432

[create_tables]
population = DROP TABLE IF EXISTS Population CASCADE; 
    CREATE TABLE Population
    ( 
        City VARCHAR(50)   NOT NULL PRIMARY KEY,
        State VARCHAR(50) NOT NULL,
        POPULATION_2010 INT NOT NULL,
        POPULATION_2011 INT NOT NULL,
        POPULATION_2012 INT NOT NULL,
        POPULATION_2013 INT NOT NULL,
        POPULATION_2014 INT NOT NULL,
        POPULATION_2015 INT NOT NULL,
        POPULATION_2016 INT NOT NULL,
        POPULATION_2017 INT NOT NULL,
        POPULATION_2018 INT NOT NULL,
        POPULATION_2019 INT NOT NULL
    );

teams_bridge = DROP TABLE IF EXISTS Teams_Bridge CASCADE; 
    CREATE TABLE Teams_Bridge
    ( 
        TeamID VARCHAR(50)   NOT NULL PRIMARY KEY,
        Nickname VARCHAR(250) NOT NULL UNIQUE,
        City VARCHAR(50)   NOT NULL UNIQUE,
        FOREIGN KEY (City) REFERENCES Population(City)
    );

games_df = DROP TABLE IF EXISTS Games_DF; 
    CREATE TABLE Games_DF
    (   
        TeamID VARCHAR(50)   NOT NULL PRIMARY KEY,
        FOREIGN KEY (TeamID) REFERENCES Teams_Bridge(TeamID),
        W-Win FLOAT NOT NULL,
        W-Loss FLOAT NOT NULL,
        L-Win FLOAT NOT NULL,
        L-Loss FLOAT NOT NULL,
        Total Wins FLOAT NOT NULL,
        Total Losses FLOAT NOT NULL,
        Total_Games FLOAT NOT NULL
    );

beer_prices = DROP TABLE IF EXISTS Beer_Prices; 
    CREATE TABLE Beer_Prices
    ( 
        Year INT NOT NULL,
        Team VARCHAR(250) NOT NULL,
        Nickname VARCHAR(250) NOT NULL,
        City VARCHAR(50)   NOT NULL PRIMARY KEY,
        FOREIGN KEY (City) REFERENCES Teams_Bridge(City),
        Price FLOAT NOT NULL,
        Size INT NOT NULL,
        Price_Per_Ounce FLOAT NOT NULL,
        FOREIGN KEY (Nickname) REFERENCES Teams_Bridge(Nickname)
    );
parks = DROP TABLE IF EXISTS Parks CASCADE; 
    CREATE TABLE Parks
    ( 
        ParkID VARCHAR(50) NOT NULL PRIMARY KEY,
        ParkName VARCHAR(250) NOT NULL UNIQUE,
        City VARCHAR(50)   NOT NULL,
        FOREIGN KEY (City) REFERENCES Population(City),
        State VARCHAR(50) NOT NULL
    );

parks_config = DROP TABLE IF EXISTS Parks_Config; 
    CREATE TABLE Parks_Config
    ( 
        ParkID VARCHAR(50)   NOT NULL PRIMARY KEY,
        FOREIGN KEY (ParkID) REFERENCES Parks(ParkID),
        ParkName VARCHAR(250) NOT NULL,
        FOREIGN KEY (ParkName) REFERENCES Parks(ParkName),
        Year INT NOT NULL,
        Capacity INT NOT NULL
    );
attendance_2013 = DROP TABLE IF EXISTS Attendance_2013; 
    CREATE TABLE Attendance_2013
    ( 
        TeamID VARCHAR(50) NOT NULL,
        FOREIGN KEY (TeamID) REFERENCES Teams_Bridge(TeamID),
        Attendance INT NOT NULL,
        Avg_Attendance INT NOT NULL
    ); 
attendance_2014 = DROP TABLE IF EXISTS Attendance_2014; 
    CREATE TABLE Attendance_2014
    ( 
        TeamID VARCHAR(50) NOT NULL,
        FOREIGN KEY (TeamID) REFERENCES Teams_Bridge(TeamID),
        Attendance INT NOT NULL,
        Avg_Attendance INT NOT NULL    ); 
attendance_2015 = DROP TABLE IF EXISTS Attendance_2015; 
    CREATE TABLE Attendance_2015
    ( 
        TeamID VARCHAR(50) NOT NULL,
        FOREIGN KEY (TeamID) REFERENCES Teams_Bridge(TeamID),
        Attendance INT NOT NULL,
        Avg_Attendance INT NOT NULL
    );  

[insert_data]
population = COPY Population(City,State,POPULATION_2010,POPULATION_2011,
        POPULATION_2012,POPULATION_2013,POPULATION_2014,POPULATION_2015,
        POPULATION_2016,POPULATION_2017,POPULATION_2018,POPULATION_2019)
    FROM 'C:\ClassRepo\return_of_the_Baseball_Madness\Resources\US City Population.csv'
    DELIMITER ','
    CSV HEADER;    

teams_bridge = COPY Teams_Bridge(TeamID, Nickname, City)
    FROM 'C:\ClassRepo\return_of_the_Baseball_Madness\Resources\   .csv'
    DELIMITER ','
    CSV HEADER;    

games_df = COPY Games_DF(TeamID, W-Win, W-Loss, L-Win, L-Loss, Total Wins,
    Total Losses,Total_Games)
    FROM 'C:\ClassRepo\return_of_the_Baseball_Madness\Resources\games_df.csv'
    DELIMITER ','
    CSV HEADER;    

beer_prices = COPY Beer_Prices(Year,Team,Nickname, City, Price, Size,Price_Per_Ounce)
    FROM 'C:\ClassRepo\return_of_the_Baseball_Madness\Resources\MLB Beer Prices.csv'
    DELIMITER ','
    CSV HEADER;  

parks = COPY Parks(ParkID, ParkName, City, State)
    FROM 'C:\ClassRepo\return_of_the_Baseball_Madness\Resources\Ballpark Database 2019 Final Files\Parks.csv'
    DELIMITER ','
    CSV HEADER;  

parks_config = COPY Parks_Config(ParkID, ParkName, Year, Capacity)
    FROM 'C:\ClassRepo\return_of_the_Baseball_Madness\Resources\Ballpark Database 2019 Final Files\ParkConfig - contains capacity.csv'
    DELIMITER ','
    CSV HEADER;  

attendance_2013 = COPY Attendance_2013( TeamID, Attendance, Avg_Attendance)
    FROM 'C:\ClassRepo\return_of_the_Baseball_Madness\Attendance_2013.csv'
    DELIMITER ','
    CSV HEADER;  

attendance_2014 = COPY Attendance_2014( TeamID, Attendance, Avg_Attendance)
    FROM 'C:\ClassRepo\return_of_the_Baseball_Madness\Attendance_2014.csv'
    DELIMITER ','
    CSV HEADER;  

attendance_2015 = COPY Attendance_2015( TeamID, Attendance, Avg_Attendance)
    FROM 'C:\ClassRepo\return_of_the_Baseball_Madness\Attendance_2015.csv'
    DELIMITER ','
    CSV HEADER;  

[retrieval_analysis_data]
retrieve_analysis_data =  SELECT Teams_Bridge.Nickname, GamesDF.TotalGames,
    Beer_Prices.Price, Beer_Prices.Price_Per_Ounce,  Population.City,
    Population.Population_2013, Population.POPULATION_2014, Population.POPULATION_2015,
    ParkConfig.Name, ParkConfig.Capacity,
    Attendance_2013.Year, Attendance_2013.Avg_Attendance, 
    Attendance_2014.Year, Attendance_2014.Avg_Attendance,
    Attendance_2015.Year, attendance_2015.Avg_Attendance
    FROM Teams_Bridge 
    JOIN Games_DF on Teams_Bridge.TeamID = Games_DF.TeamID
    JOIN Beer_Prices on Beer_Prices.Nickname = Teams_Bridge.Team_Nickname
    JOIN Population on Teams_Bridge.City = Population.City
    JOIN Parks on Parks.City = Teams_Bridge.City
    JOIN ParkConfig on Parks_Config.ParkID = Parks.ParkID
    JOIN Attendance_2013 on Attendance_2013.TeamID = Teams_Bridge.TeamID
    JOIN Attendance_2014 on Attendance_2014.TeamID = Teams_Bridge.TeamID
    JOIN Attendance_2015 on Attendance_2015.TeamID = Teams_Bridge.TeamID







